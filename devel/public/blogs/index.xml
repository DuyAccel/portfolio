<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Duy Nguyen</title>
    <link>http://localhost:1313/blogs/</link>
    <description>Recent content in Blogs on Duy Nguyen</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Sep 2024 13:59:07 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Website With Continuous Deployment</title>
      <link>http://localhost:1313/blogs/website-with-cd/</link>
      <pubDate>Sun, 01 Sep 2024 13:59:07 +0000</pubDate>
      <guid>http://localhost:1313/blogs/website-with-cd/</guid>
      <description>No more &amp;ldquo;It works on my machine&amp;rdquo;. In this blog, I will show you how I created and published a website on AWS EC2 with continuous deployment pipeline for free! Any change you make in source code will be automated compile, build and deploy within seconds once you push code into your github repository. My portfolio a.k.a this website is the result.&#xA;Technologies and the reason I choose them Docker - for containerization.</description>
    </item>
    <item>
      <title>Custom devcontainer</title>
      <link>http://localhost:1313/blogs/dev-container/</link>
      <pubDate>Sat, 31 Aug 2024 08:43:34 +0000</pubDate>
      <guid>http://localhost:1313/blogs/dev-container/</guid>
      <description>Not only neovim, you can bring all your config into your most isolated dev environment! If you&amp;rsquo;re a Linux user who has put some effort to rice within your operating system, you probably don’t want to interact with a boring terminal screen while working, right? In this article, I’ll show you how to create a development environment inside a Docker container that preserves your config files, particularly for Neovim. The best part is you can reuse them anywhere, as long as the system has Docker Engine installed.</description>
    </item>
  </channel>
</rss>
